version: 2.1
jobs:
  test:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
            source ~/.bash_profile
            sudo apt update
            nvm install node
      - restore_cache:
          key: dependency-cache-v1-{{ checksum "package-lock.json" }}
      - run:
          name: yarn install
          command: npm install
      - save_cache:
          key: dependency-cache-v1-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: docker-compose
          command: docker-compose up -d
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for db
          command: dockerize -wait http://localhost:8081 -timeout 1m
      - run:
          name: Initialize Replica Set mongoDB
          command: docker exec -it mongo mongo --eval "rs.initiate()"
      - run:
          name: Wait for typesense
          command: dockerize -wait http://localhost:8108/health -timeout 1m && sleep 10s
      - run:
          name: npm test
          command: npm test -- --ci --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: "reports/junit/js-test-results.xml"
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

workflows:
  typesense-mongodb:
    jobs:
      - test
